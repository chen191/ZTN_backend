# Generated by Django 5.0.3 on 2024-04-05 04:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sdpid',
            fields=[
                ('sdpid', models.AutoField(primary_key=True, serialize=False)),
                ('valid', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=128)),
                ('state', models.CharField(max_length=128)),
                ('locality', models.CharField(max_length=128)),
                ('org', models.CharField(max_length=128)),
                ('org_unit', models.CharField(blank=True, max_length=128, null=True)),
                ('alt_name', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('encrypt_key', models.CharField(blank=True, max_length=2048, null=True)),
                ('hmac_key', models.CharField(blank=True, max_length=2048, null=True)),
                ('serial', models.CharField(max_length=32)),
                ('last_cred_update', models.DateTimeField()),
                ('cred_update_due', models.DateTimeField()),
            ],
            options={
                'db_table': 'sdpid',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'credential',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('mobile', models.IntegerField()),
                ('os_group', models.CharField(max_length=7)),
                ('os_version', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'environment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid', models.IntegerField()),
                ('name', models.CharField(max_length=1024)),
                ('description', models.CharField(db_column='Description', max_length=4096)),
            ],
            options={
                'db_table': 'group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RefreshTrigger',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('table_name', models.TextField()),
                ('event', models.TextField()),
            ],
            options={
                'db_table': 'refresh_trigger',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.CharField(max_length=4096)),
            ],
            options={
                'db_table': 'service',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=128)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('locality', models.CharField(blank=True, max_length=128, null=True)),
                ('org', models.CharField(blank=True, max_length=128, null=True)),
                ('org_unit', models.CharField(blank=True, max_length=128, null=True)),
                ('alt_name', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('sdpid', models.OneToOneField(db_column='sdpid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='sdpmanager_backend.sdpid')),
                ('name', models.CharField(max_length=1024)),
                ('address', models.CharField(max_length=1024)),
                ('port', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gateway',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='sdpid',
            name='environment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sdpmanager_backend.environment'),
        ),
        migrations.CreateModel(
            name='GatewayController',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controller_sdpid', models.ForeignKey(db_column='controller_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('gateway_sdpid', models.ForeignKey(db_column='gateway_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
            ],
            options={
                'db_table': 'gateway_controller',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SdpidService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sdpid', models.ForeignKey(db_column='sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sdpmanager_backend.service')),
            ],
            options={
                'db_table': 'sdpid_service',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.group')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.service')),
            ],
            options={
                'db_table': 'group_service',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.TextField()),
                ('port', models.PositiveIntegerField()),
                ('nat_ip', models.CharField(max_length=128)),
                ('nat_port', models.PositiveIntegerField()),
                ('gateway_sdpid', models.ForeignKey(db_column='gateway_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sdpmanager_backend.service')),
            ],
            options={
                'db_table': 'service_gateway',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='sdpid',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.user'),
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.user')),
            ],
            options={
                'db_table': 'user_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Controller',
            fields=[
                ('sdpid', models.OneToOneField(db_column='sdpid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='sdpmanager_backend.sdpid')),
                ('name', models.CharField(max_length=1024)),
                ('address', models.CharField(max_length=4096)),
                ('port', models.IntegerField()),
                ('gateway_sdpid', models.ForeignKey(blank=True, db_column='gateway_sdpid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.service')),
            ],
            options={
                'db_table': 'controller',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OpenConnection',
            fields=[
                ('start_timestamp', models.BigIntegerField()),
                ('end_timestamp', models.BigIntegerField()),
                ('protocol', models.TextField()),
                ('source_ip', models.TextField()),
                ('source_port', models.IntegerField()),
                ('destination_ip', models.TextField()),
                ('destination_port', models.IntegerField()),
                ('nat_destination_ip', models.TextField()),
                ('nat_destination_port', models.IntegerField()),
                ('gateway_controller_connection_id', models.IntegerField(primary_key=True, serialize=False)),
                ('client_sdpid', models.ForeignKey(db_column='client_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('gateway_sdpid', models.ForeignKey(db_column='gateway_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.service')),
            ],
            options={
                'db_table': 'open_connection',
                'managed': True,
                'unique_together': {('gateway_controller_connection_id', 'client_sdpid', 'start_timestamp', 'source_port')},
            },
        ),
        migrations.CreateModel(
            name='ClosedConnection',
            fields=[
                ('gateway_sdpid', models.OneToOneField(db_column='gateway_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='sdpmanager_backend.sdpid')),
                ('service_id', models.IntegerField()),
                ('start_timestamp', models.BigIntegerField()),
                ('end_timestamp', models.BigIntegerField()),
                ('protocol', models.TextField()),
                ('source_ip', models.TextField()),
                ('source_port', models.IntegerField()),
                ('destination_ip', models.TextField()),
                ('destination_port', models.IntegerField()),
                ('nat_destination_ip', models.TextField()),
                ('nat_destination_port', models.IntegerField()),
                ('client_sdpid', models.ForeignKey(db_column='client_sdpid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sdpmanager_backend.sdpid')),
            ],
            options={
                'db_table': 'closed_connection',
                'managed': True,
                'unique_together': {('gateway_sdpid', 'client_sdpid', 'start_timestamp', 'source_port')},
            },
        ),
    ]
